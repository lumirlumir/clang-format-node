# Linux
stage2-build-linux-x64:
  runs-on: ubuntu-latest

  needs: [stage1]

  if: ${{ needs.stage1.outputs.IS_LATEST == 'false' }}

  steps:
    - name: Set up node
      uses: actions/setup-node@v4

    - name: Set up os platform and os arch
      run: |
        OS_PLATFORM=$(node -p "require('os').platform()")
        echo "OS_PLATFORM=$OS_PLATFORM" >> $GITHUB_ENV
        echo "OS_PLATFORM: $OS_PLATFORM"

        OS_ARCH=$(node -p "require('os').arch()")
        echo "OS_ARCH=$OS_ARCH" >> $GITHUB_ENV
        echo "OS_ARCH: $OS_ARCH"

    - name: Set up checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ env.LLVM_REPO }}
        ref: ${{ needs.stage1.outputs.LLVM_LATEST_RELEASE_TAG_NAME }}

    - name: Set up dependencies
      run: |
        sudo apt update -y
        sudo apt install -y python3 g++ cmake ninja-build

    - name: Build cmake
      run: |
        cmake -S llvm -B build -G Ninja \
          -DLLVM_ENABLE_PROJECTS="clang" \
          -DCMAKE_BUILD_TYPE=MinSizeRel

    - name: Build ninja
      run: |
        ninja -C build clang-format

    - name: Debug clang-format version
      run: |
        build/bin/clang-format --version

    - name: Download artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OS_PLATFORM }}-${{ env.OS_ARCH }}
        path: build/bin/clang-format
