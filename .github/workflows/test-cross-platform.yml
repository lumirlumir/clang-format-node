name: test-cross-platform

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  github-actions-runner-images:
    strategy:
      matrix:
        runner-image:
          # - macos-14-large # macos-latest-large or macos-14-large
          - macos-14 # macos-latest, macos-14, macos-latest-xlarge or macos-14-xlarge
          # - macos-13-xlarge # macos-13-xlarge
          - macos-13 # macos-13 or macos-13-large
          - macos-12 # macos-12 or macos-12-large
          - ubuntu-24.04 # ubuntu-24.04
          - ubuntu-22.04 # ubuntu-latest or ubuntu-22.04
          # - ubuntu-20.04 # ubuntu-20.04
          - windows-2022 # windows-latest or windows-2022
          # - windows-2019 # windows-2019

    runs-on: ${{ matrix.runner-image }}

    steps:
      - name: Set up checkout
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4

      - name: Set up node_modules
        run: npm ci

      - name: Debug GLIBC version
        if: runner.os == 'Linux'
        run: ldd --version

      - name: Build
        run: npm run build

      - name: Chmod
        run: npm run postinstall

      - name: Debug Permission
        if: runner.os != 'Windows'
        run: ls -alR build/bin

      - name: Test
        run: npx clang-format --version

  docker-images:
    strategy:
      matrix:
        docker:
          - platform: arm/v7
            ubuntu-image: arm32v7
            node-name: arm
          - platform: arm64/v8
            ubuntu-image: arm64v8
            node-name: arm64
          - platform: ppc64le
            ubuntu-image: ppc64le
            node-name: ppc64
          - platform: s390x
            ubuntu-image: s390x
            node-name: s390x

    runs-on: ubuntu-22.04

    steps:
      - name: Set up checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Docker run background
        run: docker run -d --name ${{ matrix.docker.node-name }} --platform linux/${{ matrix.docker.platform }} ${{ matrix.docker.ubuntu-image }}/ubuntu:22.04

      - name: Copy file to Docker container
        run: docker cp ./src/bin/linux-${{ matrix.docker.node-name }}/clang-format ${{ matrix.docker.node-name }}:/

      - name: Docker exec
        run: |
          docker exec ${{ matrix.docker.node-name }} /bin/bash -c "
            echo ---Debug architecture, pwd, ls--- &&
            uname -m &&
            pwd &&
            ls -al &&

            echo ---Chmod--- &&
            chmod 755 /clang-format &&

            echo ---Test--- &&
            /clang-format --version
          "
